'
BEGIN TRANSACTION;

--
-- Table: api_responses
--
CREATE TABLE api_responses (
  code int,
  id INTEGER PRIMARY KEY NOT NULL,
  message varchar,
  type varchar
);

CREATE INDEX pk_id ON api_responses (id);

--
-- Table: categories
--
CREATE TABLE categories (
  id INTEGER PRIMARY KEY NOT NULL,
  name varchar
);

CREATE INDEX pk_id02 ON categories (id);

--
-- Table: orders
--
CREATE TABLE orders (
  complete bit,
  id INTEGER PRIMARY KEY NOT NULL,
  petId bigint,
  quantity int,
  shipDate datetime,
  -- Order Status
  status enum
);

CREATE INDEX pk_id03 ON orders (id);

--
-- Table: pets
--
CREATE TABLE pets (
  id INTEGER PRIMARY KEY NOT NULL,
  name varchar NOT NULL,
  -- pet status in the store
  status enum,
  category_id bigint,
  FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE INDEX pk_id04 ON pets (id);

--
-- Table: pet_photo_urls
--
CREATE TABLE pet_photo_urls (
  id INTEGER PRIMARY KEY NOT NULL,
  value varchar NOT NULL,
  photoUrl_id bigint NOT NULL,
  FOREIGN KEY (photoUrl_id) REFERENCES pets(id)
);

CREATE INDEX pk_id05 ON pet_photo_urls (id);

--
-- Table: tags
--
CREATE TABLE tags (
  id INTEGER PRIMARY KEY NOT NULL,
  name varchar,
  tag_id bigint NOT NULL,
  FOREIGN KEY (tag_id) REFERENCES pets(id)
);

CREATE INDEX pk_id06 ON tags (id);

--
-- Table: users
--
CREATE TABLE users (
  email varchar,
  firstName varchar,
  id INTEGER PRIMARY KEY NOT NULL,
  lastName varchar,
  password varchar,
  phone varchar,
  -- User Status
  userStatus int,
  username varchar
);

CREATE INDEX pk_id07 ON users (id);

COMMIT;'
